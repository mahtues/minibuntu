set background=dark

set autoindent
set backspace=indent,eol,start
set cindent
set completeopt=menu,menuone,noinsert,noselect
set diffopt=filler,iwhite,context:999999
set hlsearch
set laststatus=2
set nocompatible
set nowrap
set number
set ruler
set scrolloff=2
set showcmd
set shiftwidth=4
set expandtab
set tabstop=4
set wildmenu
set wildmode=longest:full,full

syntax on
filetype plugin indent on

au BufRead,BufNewFile *.md setlocal textwidth=80
au BufReadPost *.html set syntax=htmldjango

" Better split switching
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

set foldlevel=100
set foldmethod=syntax

" Python Mode ----------------------------------------
let g:pymode=0

" jedi -----------------------------------------------
" Add the virtualenv's site-packages to vim path
if !empty($VIRTUAL_ENV)
    let python_version = substitute(system('python --version | sed "s/Python \([0-9]\).*/\1/"'), '\n', '', '')
    if python_version == '3'
        let python_version = ':py3 '
    else
        let python_version = ':py '
    endif

    let python_site_packages = systemlist('find ' . $VIRTUAL_ENV . ' -name site-packages')[0]

    exec python_version . 'import sys; sys.path.insert(0, "' . python_site_packages . '")'
endif

" TagList --------------------------------------------
let Tlist_Use_Right_Window=1
let Tlist_Show_One_File=1
let Tlist_WinWidth=40

" mucomplete -----------------------------------------
set shortmess+=c
let g:mucomplete#can_complete = {}
let g:mucomplete#can_complete.go = { 'omni': { t -> strlen(&l:omnifunc) > 0 && t =~# '\%(\k\k\|\.\|->\)$' } }
let g:mucomplete#always_use_completeopt = 1

" clang-complete -------------------------------------
let g:clang_library_path='/usr/lib/llvm-14/lib/libclang.so.1'
let g:clang_auto_user_options='compile_commands.json'
let g:clang_complete_macros=1

" cscope ---------------------------------------------
if has('cscope')
    set cscopetag
    set csto=0

    if filereadable('cscope.out')
        cs add cscope.out
    elseif $CSCOPE_DB != ''
        cs add $CSCOPE_DB
    endif

    set cscopeverbose
endif

" nerdtree -------------------------------------------
"autocmd VimEnter * NERDTree
"nnoremap <C-t> :NERDTreeToggle<CR>

" vim-go ---------------------------------------------
" automatically highlight variable your cursor is on
let g:go_auto_sameids = 1
"
" syntax highlight
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 0
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_build_constraints = 1
let g:go_highlight_generate_tags = 1

" automatically show function info
let g:go_auto_type_info = 1

autocmd FileType go nmap gc <Plug>(go-callers)
autocmd FileType go nmap gr <Plug>(go-rename)
autocmd FileType go nmap gi <Plug>(go-implements)

" vim-go-syntax --------------------------------------
let g:go_highlight_parens = 0
let g:go_highlight_braces = 0
let g:go_highlight_brackets = 0

"set t_Co=16
"let g:dracula_colorterm=0
"packadd! dracula
syntax enable
"colorscheme dracula
colo disapointment
